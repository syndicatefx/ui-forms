/*
    Inspired by 
    https://codepen.io/aaroniker/pen/ZEYoxEY?editors=1100
*/
@custom-selector :--toggles input[type=checkbox], input[type=radio];

:--toggles {
    appearance: none;
    height: var(--toggles-size);
    outline: none;
    display: inline-block;
    vertical-align: top;
    position: relative;
    cursor: pointer;
    border: 1px solid var(--bc, var(--toggles-border));
    background-color: var(--b, var(--toggles-background));
    transition: background-color 0.3s, border-color 0.3s, box-shadow 0.2s;
    
    &:after {
        content: "";
        display: block;
        position: absolute;
        transition: transform var(--d-t, 0.3s) var(--d-t-e, ease), opacity var(--d-o, 0.2s);
    }

    &:checked {
        --b: var(--toggles-active);
        --bc: var(--toggles-active);
        --d-o: .3s;
        --d-t: .6s;
        --d-t-e: cubic-bezier(.2, .85, .32, 1.2);
    }

    &:disabled {
        --b: var(--toggles-disabled-background);
        --bc: var(--toggles-disabled-border);
        cursor: not-allowed;
    }

    &:disabled + label {
        cursor: not-allowed;
    }

    &:hover:not(:checked):not(:disabled) {
        --bc: var(--toggles-border-hover);
    }

    &:focus {
        box-shadow: var(--toggles-focus);
    }

    &:not(.switch) {
        width: var(--toggles-size);
    }

    &:not(.switch):after {
        opacity: var(--o, 0);
    }

    &:not(.switch):checked {
        --o: 1;
    }

    & + label {
        font-size: var(--toggles-label-fontSize);
        line-height: var(--toggles-label-lineHeight);
        display: inline-block;
        vertical-align: top;
        cursor: pointer;
        margin-left: var(--toggles-label-marginLeft);
        margin-bottom: 0;
    }

    &:not(.switch, [type="radio"]) {
        border-radius: var(--toggles-checkbox-radius);
    }

    &:not(.switch):after {
        width: 30%;
        height: 60%;
        border: .125rem solid var(--toggles-active-inner);
        border-top: 0;
        border-left: 0;
        left: 30%;
        top: 30%;
        transform-origin: center center;
        transform: rotate(45deg) translate(-30%, -30%);
    }



    &:disabled:checked:after {
        border-color: var(--toggles-disabled-checked-inner);
    }
}

/*------------SWITCH SPECIFIC-------------*/
input[type="checkbox"].switch {
    width: var(--toggles-switch-width);
    border-radius: var(--toggles-switch-radius);

    &:after {
        left: calc(var(--toggles-switch-width) - 99%);
        top: 50%;
        border-radius: var(--toggles-switch-inner-radius);
        width: var(--toggles-switch-inner-size);
        height: var(--toggles-switch-inner-size);
        background: var(--ab, var(--toggles-border));
        transform: translateX(var(--x, 0)) translateY(-50%);
    }

    &:checked {
        --ab: var(--toggles-active-inner);
        --x: calc(var(--toggles-switch-width) - 150%);
    }

    &:disabled:after, &:disabled:checked:after {
        --ab: var(--toggles-disabled-checked-inner);
    }
}

/*------------RADIO SPECIFIC-------------*/
input[type=radio] {
    border-radius: var(--toggles-radio-radius);

    &:not(.switch):after {
        top: 50%;
        left: 50%;
        width: var(--toggles-radio-inner-size);
        height: var(--toggles-radio-inner-size);
        border-radius: var(--toggles-radio-radius);
        background: var(--ab, var(--toggles-active-inner));
        transform: translate(-50%, -50%);
    }

    &:disabled:checked:after {
        --ab: var(--toggles-disabled-checked-inner);
    }
}